# General Settings
SERVICE_NAME=BotConstructor
ENVIRONMENT=development  # Possible values: development, production, testing
DEBUG=True  # Enable or disable debug mode

# Application Port
APP_PORT=8000  # Port on which the application runs

# Database Configuration
# Replace 'bot_user' and 'bot_password' with actual credentials for your database
DATABASE_USER=bot_user
DATABASE_PASSWORD=bot_password
DATABASE_HOST=localhost
DATABASE_PORT=5432
DATABASE_NAME=bot_constructor
#DATABASE_URL=postgresql+asyncpg://${DATABASE_USER}:${DATABASE_PASSWORD}@${DATABASE_HOST}:${DATABASE_PORT}/${DATABASE_NAME}
# If you want to use dynamic DSN replace the line above and uncomment the line below
DATABASE_URL=postgresql+asyncpg://bot_user:bot_password@localhost:5432/bot_constructor

# Redis Configuration
# URL for Redis server (used for caching or session management)
REDIS_URL=redis://localhost:6379/0

# Auth Service Configuration
# URL for the authentication and authorization service
AUTH_SERVICE_URL=http://localhost:8002

# Data Storage Service Configuration
# URL for the data storage service
DATA_STORAGE_SERVICE_URL=http://localhost:8001

# Logging service configuration
LOGGING_SERVICE_URL=http://localhost:8003

# Telegram API Configuration
# Token for your Telegram Bot (generated via BotFather)
TELEGRAM_BOT_TOKEN=your-telegram-bot-token

# Telegram bot library
# Select telegram library: telegram_api, aiogram, telebot
TELEGRAM_BOT_LIBRARY=telegram_api

# Logging Configuration
# Set the logging level: DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_LEVEL=INFO

# API Version
# Specify the version of the API
API_VERSION=v1

# Connection Pool Settings
# Maximum and minimum number of database connections
MAX_CONNECTIONS_COUNT=10
MIN_CONNECTIONS_COUNT=1

# CORS Settings
# Comma-separated list of allowed origins for CORS (e.g., frontend apps)
ALLOWED_ORIGINS=http://localhost,http://127.0.0.1