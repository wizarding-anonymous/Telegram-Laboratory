# Описание миграций для микросервиса Bot Constructor

## Общая информация
Этот каталог содержит скрипты миграций базы данных для микросервиса Bot Constructor.
Миграции используются для управления схемой базы данных и включают в себя создание, изменение и удаление таблиц, индексов и ограничений.
Микросервис Bot Constructor предназначен для создания и управления Telegram ботами.

## Инструкции по работе с миграциями
1. **Создание новых миграций**:
   *   Используйте Alembic для создания новых миграционных скриптов.
   *   Убедитесь, что строка подключения к базе данных в файле `alembic.ini` настроена правильно.
   *   Команда для создания новой миграции:

        ```bash
        alembic revision -m "Описание вашей миграции"
        ```
        Пример:
        ```bash
        alembic revision -m "Create bots table"
        ```
        Это создаст новый файл в каталоге `versions`, который содержит шаблон для внесения изменений в базу данных.
   *  После чего нужно заполнить файл миграции функциями `upgrade()` и `downgrade()`.

2. **Применение миграций**:
    *   Используйте команду `alembic upgrade head` для применения всех доступных миграций.
    *   Для применения конкретной миграции: `alembic upgrade <revision_id>`.
    *   Для отката к предыдущей миграции: `alembic downgrade <revision_id>`
        ```bash
        alembic upgrade head
        ```
        или
        ```bash
         alembic downgrade <revision_id>
        ```
3. **Просмотр истории миграций**:
    *   Команда для просмотра истории миграций: `alembic history`.
         ```bash
        alembic history
        ```
4. **Проверка текущего состояния миграций**:
    *  Команда для просмотра текущего состояния миграций: `alembic current`
         ```bash
        alembic current
        ```

## Структура каталога
*   `versions/`: Содержит файлы с кодом миграций.
*   `env.py`: Файл конфигурации Alembic для работы с базой данных.
*   `alembic.ini`: Файл конфигурации Alembic.
*   `script.py.mako`: Шаблон для создания файлов миграции.
## Особенности миграций Bot Constructor
*   Миграции описывают структуру таблиц, необходимые для работы визуального конструктора ботов.
*   Структура таблиц соответствует требованиям микросервисной архитектуры, где каждый бот может иметь свою собственную базу данных, и мета-данные о ботах хранятся в отдельной базе.
*   Миграции должны быть совместимы с асинхронным SQLAlchemy.
*   Все миграции должны соответствовать стандартам проекта и иметь четкие и понятные описания.

## Важные замечания
*   Все изменения в структуре базы данных должны сопровождаться миграциями.
*   Перед применением миграций в production, обязательно проверьте их в тестовой среде.
*   Миграции должны быть атомарными (либо выполняются полностью, либо нет).
*   Применяйте миграции через командную строку, что бы отслеживать состояние миграций.

## Логирование
Alembic логирует все операции в файл `alembic.log`, это позволяет отслеживать процесс применения миграций и выявлять проблемы.

## CI/CD
Миграции базы данных должны быть интегрированы в процесс CI/CD, что обеспечит автоматическое применение миграций при каждом обновлении.

## Связанные документы
*   Описание микросервиса Bot Constructor и его требований.
*   Конфигурационные файлы Alembic (alembic.ini).
*   Файлы моделей SQLAlchemy (src/db/models).

## Контактная информация
Для вопросов и предложений свяжитесь с командой разработки микросервиса Bot Constructor.