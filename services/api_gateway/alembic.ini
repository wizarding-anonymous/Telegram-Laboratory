# services\api_gateway\alembic.ini
# Конфигурация Alembic для API Gateway
# Документация: https://alembic.sqlalchemy.org/en/latest/tutorial.html

[alembic]
# Путь к папке с миграциями
script_location = src/db/migrations

# Шаблон для именования файлов миграций
file_template = %%(year)d%%(month).2d%%(day).2d_%%(hour).2d%%(minute).2d_%%(rev)s_%%(slug)s

# Для асинхронного доступа используем asyncpg
# URL базы данных будет передан через env.py из настроек приложения
sqlalchemy.url = driver://user:pass@localhost/dbname

# Префикс для генерируемых таблиц
version_table = alembic_version

# Дополнительные пути для загрузки моделей
# prepend_sys_path = .

# Флаг для автогенерации миграций
# revision_environment = false

# Encoding файлов миграций
output_encoding = utf-8

[post_write_hooks]
# post_write_hooks определяет хуки, которые будут запущены после создания файлов миграций

# Хук для форматирования python файлов с помощью black
hooks = black
black.type = console_scripts
black.entrypoint = black
black.options = -l 79 REVISION_SCRIPT_FILENAME

[loggers]
keys = root,sqlalchemy,alembic

[handlers]
keys = console

[formatters]
keys = generic

[logger_root]
level = WARN
handlers = console
qualname =

[logger_sqlalchemy]
level = WARN
handlers =
qualname = sqlalchemy.engine

[logger_alembic]
level = INFO
handlers =
qualname = alembic

[handler_console]
class = StreamHandler
args = (sys.stderr,)
level = NOTSET
formatter = generic

[formatter_generic]
format = %(levelname)-5.5s [%(name)s] %(message)s
datefmt = %H:%M:%S

[alembic:env]
# Дополнительные опции для настройки среды выполнения миграций

# Добавляем поддержку асинхронного выполнения
async = true

# Настройка для сравнения схем
# compare_type = true
# compare_server_default = true

# Настройка для определения зависимостей между таблицами
# version_path_separator = os  # Use os.pathsep

# URL базы данных для разных окружений будет передаваться через env.py
# Это позволяет использовать разные базы для разработки, тестирования и продакшена
# sqlalchemy.url для development
# sqlalchemy.url_test для тестов
# sqlalchemy.url_prod для продакшена

[alembic:run_migrations_online]
# Настройки для онлайн выполнения миграций

# Размер транзакции
transaction_per_migration = true

# Таймаут для выполнения миграций (в секундах)
migration_timeout = 300

# Количество попыток выполнения миграции при ошибках
retry_attempts = 3

# Задержка между попытками (в секундах)
retry_delay = 5

[alembic:exclude]
# Таблицы, которые следует исключить из автогенерации миграций
tables = spatial_ref_sys,geometry_columns

[alembic:include]
# Таблицы, которые следует включить в автогенерацию миграций
# Если не указано, включаются все таблицы

[alembic:process_revision_directives]
# Настройки для обработки директив ревизий

# Префикс для имен ограничений
constraint_prefix = api_gateway_

# Разделять операции создания и удаления индексов
split_index_ops = true

[alembic:custom_naming_convention]
# Конвенция именования для ограничений базы данных
ix = ix_%(column_0_label)s
uq = uq_%(table_name)s_%(column_0_name)s
ck = ck_%(table_name)s_%(constraint_name)s
fk = fk_%(table_name)s_%(column_0_name)s_%(referred_table_name)s
pk = pk_%(table_name)s